// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	entities "github.com/sdil/jkjav-server/pkg/entities"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// FetchStation provides a mock function with given fields: location, startDate, endDate
func (_m *Service) FetchStation(location string, startDate time.Time, endDate time.Time) (*[]entities.Station, error) {
	ret := _m.Called(location, startDate, endDate)

	var r0 *[]entities.Station
	if rf, ok := ret.Get(0).(func(string, time.Time, time.Time) *[]entities.Station); ok {
		r0 = rf(location, startDate, endDate)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]entities.Station)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, time.Time, time.Time) error); ok {
		r1 = rf(location, startDate, endDate)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertStation provides a mock function with given fields: _a0
func (_m *Service) InsertStation(_a0 *entities.Station) (*entities.Station, error) {
	ret := _m.Called(_a0)

	var r0 *entities.Station
	if rf, ok := ret.Get(0).(func(*entities.Station) *entities.Station); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.Station)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*entities.Station) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
